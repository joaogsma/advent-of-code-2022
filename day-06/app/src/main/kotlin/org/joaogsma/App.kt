/*
 * This Kotlin source file was generated by the Gradle 'init' task.
 */
package org.joaogsma

fun main(args: Array<String>) {
    val result: Int =
        when (val version = args[1]) {
            "1" -> runProblem1(args[0])
            "2" -> runProblem2(args[0])
            else -> throw IllegalArgumentException("Unknown variation $version")
        }
    println("Result is $result")
}

fun runProblem1(filename: String): Int {
    return run(filename, 4)
}

fun runProblem2(filename: String): Int {
    return run(filename, 14)
}

fun run(filename: String, windowSize: Int): Int {
    val stream: String = readResource(filename).first()
    val marker: String =
        stream.windowed(size = windowSize, step = 1).find { it.toSet().size == windowSize }
            ?: throw IllegalArgumentException("Could not find marker on input")
    return stream.indexOf(marker) + marker.length
}
